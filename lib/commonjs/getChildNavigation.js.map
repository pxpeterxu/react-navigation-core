{"version":3,"sources":["getChildNavigation.js"],"names":["createParamGetter","route","paramName","defaultValue","params","getChildNavigation","navigation","childKey","getCurrentParentNavigation","children","state","routes","preloadRoutes","childRoute","concat","find","r","key","childRouter","router","routeName","focusedGrandChildRoute","index","actionCreators","actions","getActionCreators","actionHelpers","Object","keys","forEach","actionName","actionCreator","action","dispatch","isFirstRouteInParent","parentNavigation","indexOf","getParam","childSubscriber","addListener","grandChildKey","nav","isFocused","currentNavigation","getScreenProps","dangerouslyGetParent","emit"],"mappings":"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","sourcesContent":["import getChildEventSubscriber from './getChildEventSubscriber';\nimport getChildRouter from './getChildRouter';\nimport getNavigationActionCreators from './routers/getNavigationActionCreators';\nimport getChildrenNavigationCache from './getChildrenNavigationCache';\n\nconst createParamGetter = route => (paramName, defaultValue) => {\n  const params = route.params;\n\n  if (params && paramName in params) {\n    return params[paramName];\n  }\n\n  return defaultValue;\n};\n\nfunction getChildNavigation(navigation, childKey, getCurrentParentNavigation) {\n  const children = getChildrenNavigationCache(navigation);\n  const { routes, preloadRoutes } = navigation.state;\n  const childRoute = routes\n    .concat(preloadRoutes || [])\n    .find(r => r.key === childKey);\n\n  if (!childRoute) {\n    return null;\n  }\n\n  if (children[childKey] && children[childKey].state === childRoute) {\n    return children[childKey];\n  }\n\n  const childRouter = getChildRouter(navigation.router, childRoute.routeName);\n\n  // If the route has children, we'll use this to pass in to the action creators\n  // for the childRouter so that any action that depends on the active route will\n  // behave as expected. We don't explicitly require that routers implement routes\n  // and index properties, but if we did then we would put an invariant here to\n  // ensure that a focusedGrandChildRoute exists if childRouter is defined.\n  const focusedGrandChildRoute =\n    childRoute.routes && typeof childRoute.index === 'number'\n      ? childRoute.routes[childRoute.index]\n      : null;\n\n  const actionCreators = {\n    ...navigation.actions,\n    ...navigation.router.getActionCreators(childRoute, navigation.state.key),\n    ...(childRouter\n      ? childRouter.getActionCreators(focusedGrandChildRoute, childRoute.key)\n      : {}),\n    ...getNavigationActionCreators(childRoute),\n  };\n\n  const actionHelpers = {};\n  Object.keys(actionCreators).forEach(actionName => {\n    actionHelpers[actionName] = (...args) => {\n      const actionCreator = actionCreators[actionName];\n      const action = actionCreator(...args);\n      return navigation.dispatch(action);\n    };\n  });\n\n  let isFirstRouteInParent = true;\n\n  const parentNavigation = getCurrentParentNavigation();\n\n  if (parentNavigation) {\n    isFirstRouteInParent =\n      parentNavigation.state.routes.indexOf(childRoute) === 0;\n  }\n\n  if (\n    children[childKey] &&\n    children[childKey].isFirstRouteInParent() === isFirstRouteInParent\n  ) {\n    children[childKey] = {\n      ...children[childKey],\n      ...actionHelpers,\n      state: childRoute,\n      router: childRouter,\n      actions: actionCreators,\n      getParam: createParamGetter(childRoute),\n    };\n    return children[childKey];\n  } else {\n    const childSubscriber = getChildEventSubscriber(\n      navigation.addListener,\n      childKey\n    );\n\n    children[childKey] = {\n      ...actionHelpers,\n\n      state: childRoute,\n      router: childRouter,\n      actions: actionCreators,\n      getParam: createParamGetter(childRoute),\n\n      getChildNavigation: grandChildKey =>\n        getChildNavigation(children[childKey], grandChildKey, () => {\n          const nav = getCurrentParentNavigation();\n          return nav && nav.getChildNavigation(childKey);\n        }),\n\n      isFocused: () => {\n        const currentNavigation = getCurrentParentNavigation();\n        if (!currentNavigation) {\n          return false;\n        }\n        const { routes, index } = currentNavigation.state;\n        if (!currentNavigation.isFocused()) {\n          return false;\n        }\n        if (routes[index].key === childKey) {\n          return true;\n        }\n        return false;\n      },\n      isFirstRouteInParent: () => isFirstRouteInParent,\n      dispatch: navigation.dispatch,\n      getScreenProps: navigation.getScreenProps,\n      dangerouslyGetParent: getCurrentParentNavigation,\n      addListener: childSubscriber.addListener,\n      emit: childSubscriber.emit,\n    };\n    return children[childKey];\n  }\n}\n\nexport default getChildNavigation;\n"]}